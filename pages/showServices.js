import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
const inter = Inter({ subsets: ["latin"] });
import { ImSpinner6 } from "react-icons/im";
import Spinner from "@/components/Spinner";
import InfiniteScroll from "react-infinite-scroll-component";

export default function Home({
  servicesData,
  allservices,
  allservicesNoToken,
  imageList,
  initailState,
  setInitialState,
  setKey,
  loading,
  setLoading,
  setServicesData,
  fetchMoreServices,
  setPage,
  totalResults,
}) {
  const router = useRouter();
  let HOST = process.env.NEXT_PUBLIC_HOST;
  // let [jobValue, setJobValue] = useState("Switch to job");
  // let [servicesValue, setServiceValue] = useState("Switch to service");
  let [serviceButtonValue, setServiceButtonValue] = useState(
    "Show services near by"
  );
  useEffect(() => {
    if (localStorage.getItem("authToken")) {
      allservices();
    } else {
      allservicesNoToken();
    }
  }, [router.query]);


  return (
    <>
      <Head>
        <title>BizHub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="text-gray-600  body-font min-h-screen">
        <div className="container sm:px-1 px-5 py-16 mx-auto">
       
          <span className="flex text-center justify-center h-12 font-serif uppercase mb-10 text-green-50 py-2 bg-green-600  rounded-sm  text-xl  font-bold ">
          
          </span>
          {loading ? (
            <div className="flex justify-center  ">
              <span className="flex justify-center  absolute  top-64">
                <Spinner></Spinner>
              </span>
            </div>
          ) : (
            <InfiniteScroll
              dataLength={servicesData.length}
              next={fetchMoreServices}
              hasMore={totalResults !== null}
              loader={<>Loading....</>}
            >
              <div className="flex flex-wrap justify-center ">
                {servicesData &&
                  servicesData.map((key, index) => {
                    return (
                      <div
                        key={index}
                        className="xl:w-1/5 md:w-1/2  p-4 sm:p-3 sm:w-3/5 w-3/4"
                      >
                        <div className="max-w-sm bg-white  rounded-xl shadow-xl sm:mx-2">
                          <div>
                            {!key.images[0] ? (
                              <Image
                                height={2}
                                width={2}
                                className="rounded-t-lg object-contain   h-56 p-4  w-full bg-black  "
                                src={`${"/images/bizhub_logo.png"}`}
                                alt=""
                              />
                            ) : (
                              <Image
                                height={2}
                                width={2}
                                className="rounded-t-lg object-cover  h-56  w-full bg-slate-100  "
                                src={`${
                                  !key.images[0]
                                    ? "https://images.olx.com.pk/thumbnails/347296539-240x180.webp"
                                    : HOST + key.images[0].image
                                }`}
                                alt=""
                              />
                            )}
                          </div>

                          <div className="py-2 px-3 border-green-600 border-l-8 rounded-b-lg">
                            <Link href={`/postDetail/${key.id}`}>
                              <h5 className="mb-4 text-xl font-semibold tracking-tight h-16 text-gray-900">
                                {key.title.slice(0, 15)}
                              </h5>

                              <div className="flex mt-2  mb-2 align-middle">
                                <sapn className="tracking-widest text-slate-800 text-center  align-middle text-xl font-bold title-font">
                                  ${key.amount}
                                </sapn>
                                <sapn className="text-sm mt-1.5 text-gray-900 ml-auto text-center font-medium title-font ">
                                  {new Date(key.created_at).toLocaleDateString(
                                    "PK-US",
                                    {
                                      year: "numeric",
                                      month: "long",
                                      day: "numeric",
                                    }
                                  )}
                                </sapn>
                              </div>
                            </Link>
                          </div>
                        </div>
                      </div>
                    );
                  })}
              </div>
            </InfiniteScroll>
          )}
        </div>
      </div>
    </>
  );
}
